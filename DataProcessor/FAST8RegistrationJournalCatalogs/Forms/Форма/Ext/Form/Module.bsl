
&НаСервере
Процедура СканироватьНаСервере()
	
	Если Не ПроверитьЗаполнение() Тогда
		Возврат;
	КонецЕсли;
	
	ФайлКластера = Новый Файл(Объект.КаталогКластераНаСервере + "1CV8Clst.lst");
	Если Не ФайлКластера.Существует() Тогда
		ОбщегоНазначения.СообщитьПользователю("Не найден файл кластера 1CV8Clst.lst");
		Возврат;
	КонецЕсли;
	
	ТекстовыйДокумент = Новый ТекстовыйДокумент;
	ТекстовыйДокумент.Прочитать(ФайлКластера.ПолноеИмя);
	ТекстФайла = ТекстовыйДокумент.ПолучитьТекст();
	
	ИменаКаталоговБаз = Новый Массив;
	
	КаталогиВКластере = НайтиФайлы(Объект.КаталогКластераНаСервере, "*", Ложь);
	Для Каждого Каталог Из КаталогиВКластере Цикл
		#Если Сервер И Не Сервер Тогда // DEBUG
		Каталог = Новый Файл;
		#КонецЕсли
		Если Каталог.ЭтоКаталог() = Истина Тогда
			Если Каталог.ПолноеИмя = Объект.КаталогКластераНаСервере Тогда
				Продолжить;
			КонецЕсли;
			ИменаКаталоговБаз.Добавить(Каталог.Имя);
			Если СтрНачинаетсяС(Каталог.Имя, "snccntx") Тогда
				ИмяБазы = "сеансовые данные";
			Иначе
				ПозицияКаталога = СтрНайти(ТекстФайла, Каталог.Имя);
				Если ПозицияКаталога > 0 Тогда
					ПозицияКавычки = СтрНайти(ТекстФайла, """",, ПозицияКаталога, 2);
					ПозицияНачалаИмени = ПозицияКаталога + 38;
					ИмяБазы = Сред(ТекстФайла, ПозицияНачалаИмени, ПозицияКавычки - ПозицияНачалаИмени);
				Иначе
					ИмяБазы = Каталог.Имя;
				КонецЕсли;
			КонецЕсли;
			НоваяСтрока = КаталогиБаз.Добавить();
			НоваяСтрока.Путь = Каталог.Имя;
			НоваяСтрока.ИмяБазы = ИмяБазы;
		КонецЕсли;
	КонецЦикла;
	
	Для Каждого СтрокаТЧ Из КаталогиБаз Цикл
		КаталогПоиска = Объект.КаталогКластераНаСервере + СтрокаТЧ.Путь + "\";
		ФайлыВКаталоге = НайтиФайлы(КаталогПоиска, "*", Истина);
		Для Каждого Файл Из ФайлыВКаталоге Цикл
			#Если Сервер И Не Сервер Тогда // DEBUG
			Файл = Новый Файл;
			#КонецЕсли
			Если Файл.ЭтоКаталог() = Ложь Тогда
				РазмерМб = Цел(Файл.Размер() / 1024 / 1024);
			Иначе
				РазмерМб = 0;
			КонецЕсли;
			Если РазмерМб > 0 Тогда
				Если СтрокаТЧ.ИмяБазы = "сеансовые данные" Тогда
					СтрокаТЧ.СеансовыеДанные = СтрокаТЧ.СеансовыеДанные + РазмерМб;
				Иначе
					Подкаталог = СтрЗаменить(Файл.ПолноеИмя, КаталогПоиска, "");				
					Если СтрНачинаетсяС(Подкаталог, "1Cv8Log") Тогда
						СтрокаТЧ.ЖурналРегистрации = СтрокаТЧ.ЖурналРегистрации + РазмерМб;
					Иначе
						СтрокаТЧ.Словари = СтрокаТЧ.Словари + РазмерМб;
					КонецЕсли;
				КонецЕсли;
			КонецЕсли;
		КонецЦикла;
	КонецЦикла;
	
	НаполнениеКаталога.Очистить();
	СерияЖурнал = НаполнениеКаталога.Серии.Добавить("Журнал регистрации");
	СерияСеансовые = НаполнениеКаталога.Серии.Добавить("Сеансовые данные");
	СерияСловари = НаполнениеКаталога.Серии.Добавить("Словари и индексы ПП");
	Для Каждого СтрокаТЧ Из КаталогиБаз Цикл
		Точка = НаполнениеКаталога.Точки.Добавить(СтрокаТЧ.ИмяБазы);
		НаполнениеКаталога.УстановитьЗначение(Точка, СерияЖурнал, СтрокаТЧ.ЖурналРегистрации);
		НаполнениеКаталога.УстановитьЗначение(Точка, СерияСеансовые, СтрокаТЧ.СеансовыеДанные);
		НаполнениеКаталога.УстановитьЗначение(Точка, СерияСловари, СтрокаТЧ.Словари);
	КонецЦикла;
	
КонецПроцедуры // СканироватьНаСервере()

&НаКлиенте
Процедура Сканировать(Команда)
	
	СканироватьНаСервере();
	
КонецПроцедуры // Сканировать()

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Объект.КаталогКластераНаСервере = "C:\Program Files\1cv8\srvinfo\reg_1541\";
	
КонецПроцедуры
